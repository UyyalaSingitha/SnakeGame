import sys
import pygame
import math
from random import *
from colors import *

pygame.init()
game_screen = pygame.display.set_mode((720, 480))
game_screen.fill(green)
font = pygame.font.SysFont("None", 30)
lost_font = pygame.font.Font('freesansbold.ttf', 64)
pygame.display.set_caption("Singitha's classic snake")

pygame.draw.rect(game_screen, lightg, ((0, 0), (720, 20)), 0)
pygame.draw.rect(game_screen, lightg, ((0, 20), (720, 460)), 20)

pygame.draw.rect(game_screen, red, ((0, 0), (620, 300)), 0)
pygame.draw.rect(game_screen, green, ((0, 20), (615, 300)), 0)

pygame.draw.rect(game_screen, red, ((0, 0), (400, 400)), 0)
pygame.draw.rect(game_screen, green, ((0, 0), (400, 395)), 0)

pygame.draw.rect(game_screen, red, ((0, 0), (300, 300)), 0)
pygame.draw.rect(game_screen, green, ((0, 20), (295, 300)), 0)

pygame.draw.rect(game_screen, green, ((0, 0), (300, 100)), 0)
pygame.draw.rect(game_screen, green, ((0, 20), (300, 100)), 0)

pygame.draw.rect(game_screen, red, ((0, 0), (100, 100)), 0)
pygame.draw.rect(game_screen, green, ((0, 0), (100, 95)), 0)


class Snake_body:
    x = 0
    y = 0

    def __init__(self, x, y):
        self.x = x
        self.y = y


class GamingSnake:
    snakelist = []
    myhead = 0
    x = 0
    y = 0

    def __init__(self, x, y):
        self.myhead = pygame.K_RIGHT
        self.x = x
        self.y = y
        block1 = Snake_body(x - 10, y)
        self.snakelist.append(block1)
        block2 = Snake_body(x - 20, y)
        self.snakelist.append(block2)
        block3 = Snake_body(x - 30, y)
        self.snakelist.append(block3)

    def draw(self):
        for element in self.snakelist:
            pygame.draw.rect(game_screen, blue, ((element.x - 10, element.y - 10), (10, 10)), 0)
            pygame.draw.rect(game_screen, black, ((self.x - 10, self.y - 10), (10, 10)), 0)

    def setheading(self, keystroke):
        self.myhead = keystroke

    def collide(self):
        for abc in self.snakelist:
            if ((self.x, self.y) == (abc.x, abc.y)):
                return True
            return False

    def grow(self):
        temp = self.snakelist[len(self.snakelist) - 1]
        self.snakelist.append(temp)

    def move(self):
        self.snakelist.insert(0, Snake_body(self.x, self.y))
        removeBlock = self.snakelist.pop()
        pygame.draw.rect(game_screen, green, ((removeBlock.x - 10, removeBlock.y - 10), (10, 10)), 0)
        if (self.myhead == pygame.K_RIGHT):
            self.x += 20
        elif (self.myhead == pygame.K_DOWN):
            self.y += 20
        elif (self.myhead == pygame.K_UP):
            self.y -= 20
        elif (self.myhead == pygame.K_LEFT):
            self.x -= 20
        elif self.myhead == pygame.K_q:
            sys.exit()
        else:
            return

    def eat(self, food):
        return ((food.x == self.x) and (food.y == self.y))


class snakeFood:
    x = 0
    y = 0

    def __init__(self):
        self.x = randint(1, 34) * 20
        self.y = (randint(1, 22) * 20) + 20
        self.colr = black
        self.col=red
    def draw(self):
        pygame.draw.rect(game_screen, self.colr, ((self.x - 10, self.y - 10), (10, 10)), 0)
    def move(self):
            pygame.draw.rect(game_screen, green, ((self.x - 10, self.y - 10), (20, 20)), 0)
            self.x = randint(1, 34) * 20
            self.y = (randint(1, 22) * 20) + 20


class SnakeBoard:
    score = 0

    def __init__(self):
        self.score = 0

    def increase(self):
        self.score = int(self.score) + 1

    def display(self):
        pygame.draw.rect(game_screen, lightg, ((0, 0), (720, 20)), 0)
        text = font.render(" USG's Score: " + str(self.score), True, black)
        game_screen.blit(text, (0, 0))


def Boundaries(x, y):
    condition1 = ((x < 20) or (x > 710) or (y < 40) or (y > 470))
    condition2 = ((x == 620) and (y <= 300))
    condition3 = ((0 < x < 400) and (y == 400))
    condition4 = ((x == 300) and (100 < y < 300))
    condition5 = ((x <= 100) and (y == 100))
    if condition1 or condition2 or condition3 or condition4 or condition5:
        lost_text = game_screen.blit(lost_font.render("GAME OVER", True, black), [150, 200])
        pygame.display.update()
        return True
    return False


def game():
    myscore = SnakeBoard()
    food = snakeFood()
    snake = GamingSnake(100, 80)
    snake.draw()
    pygame.display.update()
    while (True):
        myscore.display()
        food.draw()
        if Boundaries(snake.x, snake.y):
            sys.exit()
        if (snake.collide()):
            sys.exit()
        if snake.eat(food):
            myscore.increase()
            snake.grow()
            food.move()
        snake.move()
        snake.draw()
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                snake.setheading(event.key)
            if event.type == pygame.QUIT:
                pygame.display.update()
                pygame.quit()
                sys.exit()
        pygame.time.delay(100)


game()